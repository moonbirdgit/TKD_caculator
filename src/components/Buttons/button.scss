@import "../../color.scss";
.buttons-grid {
  display: grid;
  position: sticky;
  top: 50%;
  /* 建立一個 2x2 的網格佈局 */
  grid-template-columns: 1.2fr 0.1fr 1.2fr;
  grid-template-rows: repeat(2, 1fr);
  gap: 15px; /* 按鈕之間的間距 */
  width: 330px; /* 整個網格的寬度 */
  height: 280px; /* 整個網格的高度 */
  margin: 0 auto; /* 置中 */
}

.score-button {
  width: 100%;
  height: 100%;
  background-color: #bdc3c7; /* 灰色背景 */
  border: none;
  border-radius: 20px; /* 圓角 */
  font-size: 1.5rem;
  font-weight: bold;
  color: #2c3e50;
  cursor: pointer;
  transition: all 0.2s ease;
}

.plus {
  .score-button-plus {
    background-color: white;
    color: $main-color;
    font-size: 16px;
    &:active {
      color: $back-color;
    }
    &:nth-child(1) {
      position: relative;
      top: 8px;
      right: 10px;
    }
    &:nth-child(2) {
      position: relative;
      top: 80px;
      left: 10px;
    }
  }
}

.score-button:hover {
  background-color: #95a5a6;
  transform: scale(1.05); /* 滑鼠懸停時放大一點 */
}

.score-button:active {
  background-color: #7f8c8d;
  transform: scale(0.95); /* 按下時縮小一點 */
}

/* 為了實現順時鐘排序，我們需要手動調整 CSS Grid 的順序 */
/* 左上: 預設位置 */
.buttons-grid button:nth-child(1) {
  grid-column: 1 / 2; /* 佔據第 1 欄 */
  grid-row: 1 / 2;
}
/* 右上 */
.buttons-grid button:nth-child(2) {
  grid-column: 3 / 4; /* **跳過中間的第 2 欄**，佔據第 3 欄 */
  grid-row: 1 / 2;
}
/* 左下 */
.buttons-grid button:nth-child(3) {
  grid-column: 1 / 2; /* 佔據第 1 欄 */
  grid-row: 2 / 3;
}
/* 右下 */
.buttons-grid button:nth-child(4) {
  grid-column: 3 / 4; /* **跳過中間的第 2 欄**，佔據第 3 欄 */
  grid-row: 2 / 3;
}

/*
  如果你想嚴格按照順時鐘順序，可以直接調整 buttonData 陣列的順序，
  HTML 結構是: 左上, 右上, 左下, 右下。
  要順時鐘 (左上, 右上, 右下, 左下)，需要調整第 3 和第 4 個元素。
  在上面的 JS 中，我已經調整了陣列，所以這裡的 CSS 只是確認而已。
*/
